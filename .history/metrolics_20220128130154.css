.section4 {
    text-align: center;
   }

.imgsection {
    display: grid;
    grid-gap: 0px;
    grid-template-columns: repeat(3, 1fr);
    align-content: center;
    align-items: center;
    justify-items: center;
    column-gap: 0px;
  }

  .imgs1 {
    margin: 5px;
    margin-inline-start: 0px;
    margin-inline-end: 0px;
  }

  /* .imgs1 img {
    width: 250 px;
  } */

  .section5 {
      text-align: center;
  }
  /*Accordion menu stats*/
  /*design accordion menu*/
  .accordionMenu {
      width: 300px;
      margin: 0 auto;
  }

  .accordionMenu input[type = radio] {
      display: none;
  }

  .accordionMenu label {
      display: block;
      height: 50px;
      line-height: 47px;
      padding: 0 25px 0 10px;
      background-color: #19b2de;
      font-size: 16px;
      color: #fff;
      position: relative;
      cursor: pointer;
      border-bottom: 1px solid gray;   
  }

  /* hide the contents of the menu*/
  .accordionMenu label::after {
      display: block;
      content: "";
      width: 0;
      height: 0;
      border-style: solid;
      border-width: 5px 0 5px 10px;
      border-color: transparent transparent transparent #ffffff;
      right: 10px;
      top: 20px;
      z-index: 10;
      /* -webkit-transition: all 0.3s ease-in-out;
      -moz-transition: all 0.3s ease-in-out;
      -ms-transition: all 0.3s ease-in-out;
      -o-transition: all 0.3s ease-in-out; */
      transition: all 0.3s ease-in-out;
  }

  .accordionMenu .content {
      max-height: 0;
      height: 0;
      overflow: hidden;
      transition: all 2s ease-in-out;
  }

  .accordionMenu .content .inner {
      font-size: 1.2rem;
      color: #000000;
      line-height: 1.5;
      background-color: #E0E0E0;
      padding: 20px 10px;
  }

  /*Animation to the accordions*/
  .accordionMenu input[type=radio]:checked + label:after {
      transform: rotate(90);
  }

  .accordionMenu input[type=radio]:checked + label + .content {
      max-height: 1000px;
      height: auto;
  }

  .tab_menu {
      max-width: 70px;

  }




  /* .page-content {
	max-width: 700px; 
	margin: 32px auto; 
	padding: 32px; 
	background: #fff;
}
a {
	color: #21D4FD; 
	transition: all 0.3s;
}
a:hover {
	color: #B721FF;
}

.tabbed {
	overflow-x: hidden; /* so we could easily hide the radio inputs
	margin: 32px 0;
	padding-bottom: 16px;
	border-bottom: 1px solid #ccc;
}

.tabbed [type="radio"] {
 hiding the inputs
	display: none;
}

.tabs {
	display: flex;
	align-items: stretch;
	list-style: none;
	padding: 0;
	border-bottom: 1px solid #ccc;
}
.tab > label {
	display: block;
	margin-bottom: -1px;
	padding: 12px 15px;
	border: 1px solid #ccc;
	background: #eee;
	color: #666;
	font-size: 12px; 
	font-weight: 600;
	text-transform: uppercase;
	letter-spacing: 1px;
	cursor: pointer;	
	transition: all 0.3s;
}
.tab:hover label {
	border-top-color: #333;
	color: #333;
}

.tab-content {
	display: none;
	color: #777;
}

 As we cannot replace the numbers with variables or calls to element properties, the number of this selector parts is our tab count limit */
.tabbed [type="radio"]:nth-of-type(1):checked ~ .tabs .tab:nth-of-type(1) label,
.tabbed [type="radio"]:nth-of-type(2):checked ~ .tabs .tab:nth-of-type(2) label,
.tabbed [type="radio"]:nth-of-type(3):checked ~ .tabs .tab:nth-of-type(3) label,
.tabbed [type="radio"]:nth-of-type(4):checked ~ .tabs .tab:nth-of-type(4) label,
.tabbed [type="radio"]:nth-of-type(5):checked ~ .tabs .tab:nth-of-type(5) label {
	border-bottom-color: #fff;
	border-top-color: #B721FF;
	background: #fff;
	color: #222;
}

.tabbed [type="radio"]:nth-of-type(1):checked ~ .tab-content:nth-of-type(1),
.tabbed [type="radio"]:nth-of-type(2):checked ~ .tab-content:nth-of-type(2),
.tabbed [type="radio"]:nth-of-type(3):checked ~ .tab-content:nth-of-type(3),
.tabbed [type="radio"]:nth-of-type(4):checked ~ .tab-content:nth-of-type(4) {
	display: block;
} */